#!/bin/bash
#
# rc file for starting hybris
#
# On most distributions, this file may be called:
# /etc/rc.d/init.d/hybris or /etc/init.d/hybris
#
#
# chkconfig: 345 99 99
# config: $HYBRIS_HOME/config/local.properties
# description: starts hybris server

DESC="Hybris Server"
NAME="hybris_server"
STARTUP_SCRIPT="<%= @config.platform_dir %>/hybrisserver.sh"
RUN_USER="<%= @config.run_user %>"
#PIDFILE="/var/run/$NAME.pid"
#LOCKFILE="/var/lock/subsys/hybris_server"
HYBRIS_HOME="<%= @config.root_dir %>"

# Make sure the server starts as a non-root user, set that here.
#RUNAS="<%= @config.run_user %>"

# Set the base path to your hybris installation.
#HYBRIS_HOME="<%= @config.root_dir %>"

# Set the path to the Tomcat 6 startup script included with Hybris.
#STARTUP_SCRIPT="<%= @config.platform_dir %>/hybrisserver.sh"

#HYBRUNNING=`ps auxwww | grep hybris | grep "jmxremote" | grep -v grep | wc -l`

# Source function library.
. /etc/init.d/functions

# Exit if the package is not installed
[ -x "$STARTUP_SCRIPT" ] || exit 0

# Make sure that this script is being run as the root user.
if (( `/usr/bin/id -u` != 0 )); then
{ echo "Sorry, this init script must be run as root.  Exiting...";
exit; }
fi

running() {
  RUNNING=1
  HYBRIS_RUNNING="$( ps ax | grep 'hybris' | grep "jmxremote" | grep -v grep )"
  if [ ! -z "$HYBRIS_RUNNING" ] ; then
    RUNNING=0
  fi
  return $RUNNING
}

# lock_exists() {
#   LOCK_EXISTS=1
#   if [ -f $LOCKFILE ]; then
#     ls_pid="$(cat $PIDFILE)"
#     LOCK_EXISTS=0
#   fi
#   return $LOCK_EXISTS
# }

status() {
    if running; then
        echo "$NAME is running"
        exit 0
    else
        echo "$NAME is not running"
        exit 1
    fi
}

# Start the Hybris server.
start() {
  echo "Attempting to Starting $NAME with $STARTUP_SCRIPT start"
  RETVAL=1
  if running; then
    echo "Hybris is already running."
    exit 1
  fi

  cd <%= @config.platform_dir %>
  if ! /bin/su -m $RUN_USER -c "${STARTUP_SCRIPT} start >&/dev/null"; then
    echo "FAILED: Could not start hybris."
  else
    RETVAL=$?
    sleep 5
    if running; then
      echo "Hybris is running."
    else
      sleep 20
      if running; then
        echo "Hybris is running."
        RETVAL=0
      else
        echo "Could not start hybris."
        RETVAL=1
      fi
    fi
  fi

  exit $RETVAL
}

#Stop the Hybris server.
stop() {
  echo "Attempting to shut down hybris.."
  echo
  cd <%= @config.platform_dir %>
  /bin/su -m $RUN_USER -c "${STARTUP_SCRIPT} stop"

  sleep 5

  if running; then
    echo "Waiting for Hybris to shut down..."
    sleep 20
    if running; then
      echo "Failed to shut down hybris."
      exit 1
    fi
  else
    exit 0
  fi
}

#Stop the Hybris server.
restart() {
  echo "Attempting to shut down hybris.."
  echo
  cd <%= @config.platform_dir %>
  /bin/bash -c "${STARTUP_SCRIPT} stop"

  sleep 5

  if running; then
    echo "Waiting for Hybris to shut down.."
    sleep 20
    if running; then
      echo "Failed to shut down hybris."
      exit 1
    fi
  else
    start
  fi
}

case "$1" in
    start)
      start
      ;;
    stop)
      stop
      ;;
    status)
      status
      ;;
    restart)
      restart
      ;;
    *)
        echo "Usage: hybris {start|stop|status|restart}"
        exit 1
        ;;
esac
exit $?
